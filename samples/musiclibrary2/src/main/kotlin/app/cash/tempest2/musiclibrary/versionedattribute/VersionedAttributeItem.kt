package app.cash.tempest2.musiclibrary.versionedattribute

import app.cash.tempest2.extensions.TempestAutoGeneratedTimeStamp
import app.cash.tempest2.extensions.TempestDateAttributeConverterProvider
import app.cash.tempest2.extensions.WriteMode.ALWAYS
import app.cash.tempest2.extensions.WriteMode.CREATE
import software.amazon.awssdk.enhanced.dynamodb.DefaultAttributeConverterProvider
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbVersionAttribute
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbSortKey
import java.time.Instant
import java.util.Date

@DynamoDbBean(
  converterProviders = [
    TempestDateAttributeConverterProvider::class,
    DefaultAttributeConverterProvider::class,
  ]
)
class VersionedAttributeItem {
  @get:DynamoDbPartitionKey
  var partition_key: String? = null

  @get:DynamoDbSortKey
  var sort_key: String? = null

  @get:DynamoDbVersionAttribute
  var version: Long? = null

  @get:TempestAutoGeneratedTimeStamp(writeMode = CREATE)
  var created_at_instant: Instant? = null

  @get:TempestAutoGeneratedTimeStamp(writeMode = CREATE)
  var created_at_date: Date? = null

  @get:TempestAutoGeneratedTimeStamp(writeMode = ALWAYS)
  var updated_at_instant: Instant? = null

  @get:TempestAutoGeneratedTimeStamp(writeMode = ALWAYS)
  var updated_at_date: Date? = null

  @get:DynamoDbAutoGeneratedTimestampAttribute
  var updated_at_dynamo: Instant? = null

  var description: String? = null

  // For async parallel writes test to track consistent time
  // stamps and version across async coroutines.
  var one_version: Long? = null
  var one_created_at: Instant? = null
  var one_updated_at: Instant? = null

  var two_version: Long? = null
  var two_created_at: Instant? = null
  var two_updated_at: Instant? = null

  var three_version: Long? = null
  var three_created_at: Instant? = null
  var three_updated_at: Instant? = null

  var four_version: Long? = null
  var four_created_at: Instant? = null
  var four_updated_at: Instant? = null

  companion object {
    const val TABLE_NAME = "versioned_attributes"
  }
}
