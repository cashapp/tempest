package app.cash.tempest2.extensions

import software.amazon.awssdk.annotations.SdkPublicApi
import software.amazon.awssdk.enhanced.dynamodb.DynamoDbEnhancedClient
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.BeanTableSchemaAttributeTag

/**
 * Requires [TempestAutoGeneratedTimestampRecordExtension] to be installed on the [DynamoDbEnhancedClient]
 *
 * If using a Date attribute you must use [TempestDateAttributeConverterProvider] on the [DynamoDbBean], [TempestDateAttributeConverter] on the attribute,
 * or implement your own [AttributeConverter]
 *
 * @param writeMode whether to only write the timestamp on create or any time there is an update/put.
 *
 * Denotes this attribute as recording the auto generated created at timestamp for the record.
 * When the annotated attribute is null during write it will be updated with the current time stamp.
 */
@SdkPublicApi
@Target(AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY_GETTER, AnnotationTarget.PROPERTY_SETTER)
@Retention(
  AnnotationRetention.RUNTIME
)
@BeanTableSchemaAttributeTag(
  TempestAutoGeneratedTimestampRecordExtension.Companion.AttributeTag::class
)
annotation class TempestAutoGeneratedTimeStamp(val writeMode: WriteMode)

enum class WriteMode {
  ALWAYS,
  CREATE
}